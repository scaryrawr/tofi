#!/usr/bin/python

import argparse
import i3ipc
import sys

import gi
gi.require_version('Gio', '2.0')
from gi.repository import Gio

ipc = i3ipc.Connection()

def create_app_search_result(app):
    return 'launch: {}: {}'.format(app.get_display_name(), app.get_description()) if app.get_description() != None else 'launch: {}'.format(app.get_name())

def create_window_search_result(win):
    return 'window: {} - {}'.format(win.name, win.id)

def get_executable(search_term):
    for binary in map(lambda app: app.get_executable() if app.get_executable() != '/usr/bin/flatpak' else app.get_commandline(), filter(lambda app: create_app_search_result(app).strip() == search_term, Gio.AppInfo.get_all())):
        ipc.command('exec --no-startup-id {}'.format(binary))

def list_apps():
    print(*map(create_app_search_result, filter(lambda app : app.should_show(), Gio.AppInfo.get_all())), sep='\n')

def list_windows():
    print(*map(create_window_search_result, filter(lambda item: item.type == 'con' and item.window_instance != 'polybar' and item.workspace() != None and item.window_instance != 'tofi' and item.app_id != 'tofi' and item.name != None, ipc.get_tree())), sep='\n')

def focus_app(search_term, preview):
    tree = ipc.get_tree()
    for window in filter(lambda item: create_window_search_result(item) == search_term, tree):
        window.command('focus')
    if preview:
        for window in filter(lambda item: item.window_instance == 'tofi' or item.app_id == 'tofi', tree):
            window.command('focus')


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Tofi Launcher')

    parser.add_argument('--applications', help='List registered applications', action='store_true')
    parser.add_argument('--windows', help='List active windows', action='store_true')
    parser.add_argument('--preview', help='Perform preview actions', action='store_true')

    args = parser.parse_args()

    if args.applications:
        list_apps()
    if args.windows:
        list_windows()

    if not sys.stdin.isatty():
        for line in sys.stdin:
            if args.preview:
                focus_app(line.strip(), True)
            else:
                get_executable(line.strip())
                focus_app(line.strip(), False)
